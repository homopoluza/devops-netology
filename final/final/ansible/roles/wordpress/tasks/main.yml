---
- name: install LAMP packages
  become: true
  ansible.builtin.apt:
    name: "{{ item  }}" 
    state: present
    update_cache: yes
    loop: "{{ LAMP }}"

- name: install PHP modules
  become: true
  ansible.builtin.apt:
    name: "{{ item  }}"
    state: present
    loop: "{{ php_modules }}"

- name: create document root
  ansible.builtin.fail:
    path: "/var/www/{{ http_host }}"
    state: directory
    owner: "www-data"
    group: "www-data"
    mode: '0755'

- name: set up apache virtual host
  ansible.builtin.template:
    src: "templates/apache.conf.j2"
    dest: "/etc/apache2/sites-available/{{ http_conf }}"
  notify: reload apache

- name: enable rewrite module
  ansible.builtin.shell: /usr/sbin/a2enmod rewrite
  notify: reload apache

- name: enable new site
  ansible.builtin.shell: /usr/sbin/a2ensite {{ http_conf }}
  notify: reload apache

- name: disable default apache site
  ansible.builtin.shell: /usr/sbin/a2dissite 000-default.conf
  notify: restart apache

- name: "UFW - allow HTTP on port {{ http_port }}"
  ufw:
    rule: allow
    port: "{{ http_port }}"
    proto: tcp

- name: download and unpack wordpress
  ansible.builtin.unarchive:
    src: https://wordpress.org/latest.tar.gz
    dest: "/var/www/{{ http_host }}"
    remote_src: yes
    creates: "/var/www/{{ http_host }}/wordpress"

- name: set ownership
  ansible.builtin.file:
    path: "/var/www/{{ http_host }}"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data

- name: set permissions for directories
  ansible.builtin.shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"

- name: set permissions for files
  ansible.builtin.shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"

- name: set up wp-config
  ansible.builtin.template:
    src: "templates/wp-config.php.j2"
    dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"